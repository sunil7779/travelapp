{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\Desktop\\\\projectintern\\\\travel-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { auth } from '../firebase/firebase'; // Import auth from firebase.js\nimport { signInWithEmailAndPassword } from 'firebase/auth'; // Firebase Auth method\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from React Router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // To show any error message\n\n  const navigate = useNavigate(); // Initialize useNavigate for redirection\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Basic email and password validation\n    if (!email || !password) {\n      setError('Please enter both email and password.');\n      return;\n    }\n    if (password.length < 6) {\n      setError('Password must be at least 6 characters.');\n      return;\n    }\n    try {\n      // Sign in the user with email and password\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      console.log('Login successful', userCredential);\n\n      // Reset any previous error message\n      setError('');\n\n      // Redirect user to the homepage or dashboard after successful login\n      navigate('/dashboard'); // You can change this to any route you want to redirect to\n    } catch (error) {\n      // Handle specific Firebase errors\n      if (error.code === 'auth/invalid-email') {\n        setError('Invalid email format.');\n      } else if (error.code === 'auth/wrong-password') {\n        setError('Incorrect password.');\n      } else if (error.code === 'auth/user-not-found') {\n        setError('No user found with this email.');\n      } else {\n        setError('Login failed. Please try again.');\n      }\n      console.error('Login failed:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","auth","signInWithEmailAndPassword","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","length","userCredential","console","log","code","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["C:/Users/SUNIL/Desktop/projectintern/travel-app/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth } from '../firebase/firebase'; // Import auth from firebase.js\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';  // Firebase Auth method\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate from React Router\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(''); // To show any error message\r\n\r\n  const navigate = useNavigate(); // Initialize useNavigate for redirection\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic email and password validation\r\n    if (!email || !password) {\r\n      setError('Please enter both email and password.');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setError('Password must be at least 6 characters.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Sign in the user with email and password\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      console.log('Login successful', userCredential);\r\n\r\n      // Reset any previous error message\r\n      setError('');\r\n\r\n      // Redirect user to the homepage or dashboard after successful login\r\n      navigate('/dashboard'); // You can change this to any route you want to redirect to\r\n    } catch (error) {\r\n      // Handle specific Firebase errors\r\n      if (error.code === 'auth/invalid-email') {\r\n        setError('Invalid email format.');\r\n      } else if (error.code === 'auth/wrong-password') {\r\n        setError('Incorrect password.');\r\n      } else if (error.code === 'auth/user-not-found') {\r\n        setError('No user found with this email.');\r\n      } else {\r\n        setError('Login failed. Please try again.');\r\n      }\r\n      console.error('Login failed:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleLogin}>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n        />\r\n        \r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter your password\"\r\n        />\r\n        \r\n        <button type=\"submit\">Login</button>\r\n        \r\n        {/* Display error message */}\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}