{"ast":null,"code":"// // src/pages/Dashboard.js\n// import React, { useState, useEffect } from \"react\";\n// import { db } from \"../firebase/firebase\";\n// import { collection, getDocs } from \"firebase/firestore\";\n// import { useNavigate } from \"react-router-dom\";\n// const Dashboard = () => {\n//   const [itineraries, setItineraries] = useState([]);\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     const fetchItineraries = async () => {\n//       const querySnapshot = await getDocs(collection(db, \"itineraries\"));\n//       const itinerariesData = querySnapshot.docs.map(doc => doc.data());\n//       setItineraries(itinerariesData);\n//     };\n//     fetchItineraries();\n//   }, []);\n//   return (\n//     <div>\n//       <h2>Your Itineraries</h2>\n//       <ul>\n//         {itineraries.map((itinerary, index) => (\n//           <li key={index}>\n//             <h3>{itinerary.destination}</h3>\n//             <p>{itinerary.activity}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default Dashboard;\nimport React,{useState,useEffect}from'react';import{db}from'../firebase/firebase';// Import Firestore\nimport{collection,getDocs}from'firebase/firestore';// Firebase Firestore methods\nimport{useNavigate}from'react-router-dom';import'./Dashboard.css';// Add your styling here\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[itineraries,setItineraries]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const navigate=useNavigate();useEffect(()=>{const fetchItineraries=async()=>{try{// Get itineraries from Firestore\nconst itinerariesCollection=collection(db,'itineraries');const itinerariesSnapshot=await getDocs(itinerariesCollection);const itinerariesList=itinerariesSnapshot.docs.map(doc=>doc.data());setItineraries(itinerariesList);setLoading(false);}catch(err){setError('Failed to load itineraries.');setLoading(false);}};fetchItineraries();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading...\"});// Optional: Show a loading spinner while fetching\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to Your Dashboard!\"}),itineraries.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-itineraries-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No itineraries found!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"It looks like you haven't planned any trips yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Start planning your next adventure now!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/add-itinerary'),className:\"add-itinerary-btn\",children:\"Add New Itinerary\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"itinerary-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Itineraries\"}),/*#__PURE__*/_jsx(\"ul\",{children:itineraries.map((itinerary,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:itinerary.destination}),/*#__PURE__*/_jsx(\"p\",{children:itinerary.activity}),/*#__PURE__*/_jsx(\"p\",{children:itinerary.date}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(`/itinerary/${itinerary.id}`),children:\"View Details\"})]},index))})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","useNavigate","jsx","_jsx","jsxs","_jsxs","Dashboard","itineraries","setItineraries","loading","setLoading","error","setError","navigate","fetchItineraries","itinerariesCollection","itinerariesSnapshot","itinerariesList","docs","map","doc","data","err","className","children","length","onClick","itinerary","index","destination","activity","date","id"],"sources":["C:/Users/SUNIL/Desktop/projectintern/travel-app/src/pages/Dashboard.js"],"sourcesContent":["// // src/pages/Dashboard.js\n// import React, { useState, useEffect } from \"react\";\n// import { db } from \"../firebase/firebase\";\n// import { collection, getDocs } from \"firebase/firestore\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Dashboard = () => {\n//   const [itineraries, setItineraries] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchItineraries = async () => {\n//       const querySnapshot = await getDocs(collection(db, \"itineraries\"));\n//       const itinerariesData = querySnapshot.docs.map(doc => doc.data());\n//       setItineraries(itinerariesData);\n//     };\n//     fetchItineraries();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Your Itineraries</h2>\n//       <ul>\n//         {itineraries.map((itinerary, index) => (\n//           <li key={index}>\n//             <h3>{itinerary.destination}</h3>\n//             <p>{itinerary.activity}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebase/firebase';  // Import Firestore\nimport { collection, getDocs } from 'firebase/firestore';  // Firebase Firestore methods\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // Add your styling here\n\nconst Dashboard = () => {\n  const [itineraries, setItineraries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchItineraries = async () => {\n      try {\n        // Get itineraries from Firestore\n        const itinerariesCollection = collection(db, 'itineraries');\n        const itinerariesSnapshot = await getDocs(itinerariesCollection);\n        const itinerariesList = itinerariesSnapshot.docs.map(doc => doc.data());\n        \n        setItineraries(itinerariesList);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load itineraries.');\n        setLoading(false);\n      }\n    };\n\n    fetchItineraries();\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading-spinner\">Loading...</div>;  // Optional: Show a loading spinner while fetching\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Welcome to Your Dashboard!</h2>\n      \n      {/* Check if there are any itineraries */}\n      {itineraries.length === 0 ? (\n        <div className=\"no-itineraries-message\">\n          <h3>No itineraries found!</h3>\n          <p>It looks like you haven't planned any trips yet.</p>\n          <p>Start planning your next adventure now!</p>\n          <button onClick={() => navigate('/add-itinerary')} className=\"add-itinerary-btn\">\n            Add New Itinerary\n          </button>\n        </div>\n      ) : (\n        <div className=\"itinerary-list\">\n          <h3>Your Itineraries</h3>\n          <ul>\n            {itineraries.map((itinerary, index) => (\n              <li key={index}>\n                <h4>{itinerary.destination}</h4>\n                <p>{itinerary.activity}</p>\n                <p>{itinerary.date}</p>\n                <button onClick={() => navigate(`/itinerary/${itinerary.id}`)}>View Details</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}