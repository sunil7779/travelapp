{"ast":null,"code":"// Signup.js\n// import React, { useState } from \"react\";\n// import { auth } from \"../firebase/firebase\"; // Importing auth for authentication\n// import { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase auth method\n// import moduleName from 'module'\n// const Signup = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const handleSignup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Create new user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       console.log(\"User signed up successfully\");\n//       // Redirect user or do something else after sign up\n//     } catch (error) {\n//       console.error(\"Error signing up: \", error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Signup</h2>\n//       <form onSubmit={handleSignup}>\n//         <div>\n//           <label>Email:</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Signup;\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       navigate('/dashboard'); // Navigate to the dashboard after successful sign-up\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Signup;\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate(); // Hook for redirection\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       // Create user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       setLoading(false); // Disable the loader once signup is complete\n//       // Redirect to the dashboard after successful signup\n//       navigate('/dashboard'); // Redirecting to the dashboard route\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false); // Stop the loader in case of error\n//     }\n//   };\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Signup;\nimport React,{useState}from'react';import{auth}from'../firebase/firebase';import{createUserWithEmailAndPassword}from'firebase/auth';import{useNavigate}from'react-router-dom';import'./Signup.css';// Add a separate CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');// State to hold error message\nconst navigate=useNavigate();// Hook for redirection\nconst handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');// Reset error message on new submission\ntry{// Create user with email and password\nawait createUserWithEmailAndPassword(auth,email,password);setLoading(false);// Disable the loader once signup is complete\n// Redirect to the dashboard after successful signup\nnavigate('/dashboard');// Redirecting to the dashboard route\n}catch(error){console.error(\"Error during sign up:\",error.message);setLoading(false);// Stop the loader in case of error\n// Set the error message\nsetError(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"signup-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",placeholder:\"Enter your password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"submit-btn\",children:loading?\"Signing up...\":\"Sign Up\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"p\",{className:\"login-link\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login here\"})]})]})]});};export default Signup;","map":{"version":3,"names":["React","useState","auth","createUserWithEmailAndPassword","useNavigate","jsx","_jsx","jsxs","_jsxs","Signup","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","handleSubmit","e","preventDefault","console","message","className","children","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","disabled","href"],"sources":["C:/Users/SUNIL/Desktop/projectintern/travel-app/src/pages/Signup.js"],"sourcesContent":["// Signup.js\n\n// import React, { useState } from \"react\";\n// import { auth } from \"../firebase/firebase\"; // Importing auth for authentication\n// import { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase auth method\n// import moduleName from 'module'\n\n// const Signup = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleSignup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Create new user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       console.log(\"User signed up successfully\");\n//       // Redirect user or do something else after sign up\n//     } catch (error) {\n//       console.error(\"Error signing up: \", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Signup</h2>\n//       <form onSubmit={handleSignup}>\n//         <div>\n//           <label>Email:</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\n\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n    \n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       navigate('/dashboard'); // Navigate to the dashboard after successful sign-up\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\n\n\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate(); // Hook for redirection\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n    \n//     try {\n//       // Create user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       setLoading(false); // Disable the loader once signup is complete\n\n//       // Redirect to the dashboard after successful signup\n//       navigate('/dashboard'); // Redirecting to the dashboard route\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false); // Stop the loader in case of error\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\nimport React, { useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport './Signup.css'; // Add a separate CSS file for styling\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(''); // State to hold error message\n  const navigate = useNavigate(); // Hook for redirection\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(''); // Reset error message on new submission\n\n    try {\n      // Create user with email and password\n      await createUserWithEmailAndPassword(auth, email, password);\n      setLoading(false); // Disable the loader once signup is complete\n\n      // Redirect to the dashboard after successful signup\n      navigate('/dashboard'); // Redirecting to the dashboard route\n    } catch (error) {\n      console.error(\"Error during sign up:\", error.message);\n      setLoading(false); // Stop the loader in case of error\n\n      // Set the error message\n      setError(error.message); \n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h2>Sign Up</h2>\n      <form onSubmit={handleSubmit} className=\"signup-form\">\n        <label htmlFor=\"email\">Email:</label>\n        <input \n          type=\"email\" \n          id=\"email\" \n          placeholder=\"Enter your email\" \n          value={email} \n          onChange={(e) => setEmail(e.target.value)} \n          required\n        />\n\n        <label htmlFor=\"password\">Password:</label>\n        <input \n          type=\"password\" \n          id=\"password\" \n          placeholder=\"Enter your password\" \n          value={password} \n          onChange={(e) => setPassword(e.target.value)} \n          required\n        />\n\n        <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n          {loading ? \"Signing up...\" : \"Sign Up\"}\n        </button>\n\n        {/* Show error message if exists */}\n        {error && <p className=\"error-message\">{error}</p>}\n\n        <p className=\"login-link\">\n          Already have an account? <a href=\"/login\">Login here</a>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}