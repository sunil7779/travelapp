{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNIL\\\\Desktop\\\\projectintern\\\\travel-app\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// Signup.js\n\n// import React, { useState } from \"react\";\n// import { auth } from \"../firebase/firebase\"; // Importing auth for authentication\n// import { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase auth method\n// import moduleName from 'module'\n\n// const Signup = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleSignup = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Create new user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       console.log(\"User signed up successfully\");\n//       // Redirect user or do something else after sign up\n//     } catch (error) {\n//       console.error(\"Error signing up: \", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Signup</h2>\n//       <form onSubmit={handleSignup}>\n//         <div>\n//           <label>Email:</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       navigate('/dashboard'); // Navigate to the dashboard after successful sign-up\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from 'react';\n// import { auth } from '../firebase/firebase';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import { useNavigate } from 'react-router-dom';\n// import './Signup.css'; // Add a separate CSS file for styling\n\n// const Signup = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate(); // Hook for redirection\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Create user with email and password\n//       await createUserWithEmailAndPassword(auth, email, password);\n//       setLoading(false); // Disable the loader once signup is complete\n\n//       // Redirect to the dashboard after successful signup\n//       navigate('/dashboard'); // Redirecting to the dashboard route\n//     } catch (error) {\n//       console.error(\"Error during sign up:\", error.message);\n//       setLoading(false); // Stop the loader in case of error\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <label htmlFor=\"email\">Email:</label>\n//         <input \n//           type=\"email\" \n//           id=\"email\" \n//           placeholder=\"Enter your email\" \n//           value={email} \n//           onChange={(e) => setEmail(e.target.value)} \n//           required\n//         />\n\n//         <label htmlFor=\"password\">Password:</label>\n//         <input \n//           type=\"password\" \n//           id=\"password\" \n//           placeholder=\"Enter your password\" \n//           value={password} \n//           onChange={(e) => setPassword(e.target.value)} \n//           required\n//         />\n\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\n//         </button>\n\n//         <p className=\"login-link\">\n//           Already have an account? <a href=\"/login\">Login here</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signup;\nimport React, { useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport './Signup.css'; // Add a separate CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(''); // State to hold error message\n  const navigate = useNavigate(); // Hook for redirection\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(''); // Reset error message on new submission\n\n    try {\n      // Create user with email and password\n      await createUserWithEmailAndPassword(auth, email, password);\n      setLoading(false); // Disable the loader once signup is complete\n\n      // Redirect to the dashboard after successful signup\n      navigate('/dashboard'); // Redirecting to the dashboard route\n    } catch (error) {\n      console.error(\"Error during sign up:\", error.message);\n      setLoading(false); // Stop the loader in case of error\n\n      // Set the error message\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-btn\",\n        children: loading ? \"Signing up...\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-link\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"oys+aRSDi2Lrf1KkdpCiCHhej3A=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","auth","createUserWithEmailAndPassword","useNavigate","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","handleSubmit","e","preventDefault","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/SUNIL/Desktop/projectintern/travel-app/src/pages/Signup.js"],"sourcesContent":["// Signup.js\r\n\r\n// import React, { useState } from \"react\";\r\n// import { auth } from \"../firebase/firebase\"; // Importing auth for authentication\r\n// import { createUserWithEmailAndPassword } from \"firebase/auth\"; // Firebase auth method\r\n// import moduleName from 'module'\r\n\r\n// const Signup = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n\r\n//   const handleSignup = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Create new user with email and password\r\n//       await createUserWithEmailAndPassword(auth, email, password);\r\n//       console.log(\"User signed up successfully\");\r\n//       // Redirect user or do something else after sign up\r\n//     } catch (error) {\r\n//       console.error(\"Error signing up: \", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Signup</h2>\r\n//       <form onSubmit={handleSignup}>\r\n//         <div>\r\n//           <label>Email:</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Sign Up</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { auth } from '../firebase/firebase';\r\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signup.css'; // Add a separate CSS file for styling\r\n\r\n// const Signup = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n    \r\n//     try {\r\n//       await createUserWithEmailAndPassword(auth, email, password);\r\n//       navigate('/dashboard'); // Navigate to the dashboard after successful sign-up\r\n//     } catch (error) {\r\n//       console.error(\"Error during sign up:\", error.message);\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2>Sign Up</h2>\r\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input \r\n//           type=\"email\" \r\n//           id=\"email\" \r\n//           placeholder=\"Enter your email\" \r\n//           value={email} \r\n//           onChange={(e) => setEmail(e.target.value)} \r\n//           required\r\n//         />\r\n\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input \r\n//           type=\"password\" \r\n//           id=\"password\" \r\n//           placeholder=\"Enter your password\" \r\n//           value={password} \r\n//           onChange={(e) => setPassword(e.target.value)} \r\n//           required\r\n//         />\r\n\r\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\r\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\r\n//         </button>\r\n\r\n//         <p className=\"login-link\">\r\n//           Already have an account? <a href=\"/login\">Login here</a>\r\n//         </p>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { auth } from '../firebase/firebase';\r\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Signup.css'; // Add a separate CSS file for styling\r\n\r\n// const Signup = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate(); // Hook for redirection\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n    \r\n//     try {\r\n//       // Create user with email and password\r\n//       await createUserWithEmailAndPassword(auth, email, password);\r\n//       setLoading(false); // Disable the loader once signup is complete\r\n\r\n//       // Redirect to the dashboard after successful signup\r\n//       navigate('/dashboard'); // Redirecting to the dashboard route\r\n//     } catch (error) {\r\n//       console.error(\"Error during sign up:\", error.message);\r\n//       setLoading(false); // Stop the loader in case of error\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2>Sign Up</h2>\r\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input \r\n//           type=\"email\" \r\n//           id=\"email\" \r\n//           placeholder=\"Enter your email\" \r\n//           value={email} \r\n//           onChange={(e) => setEmail(e.target.value)} \r\n//           required\r\n//         />\r\n\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input \r\n//           type=\"password\" \r\n//           id=\"password\" \r\n//           placeholder=\"Enter your password\" \r\n//           value={password} \r\n//           onChange={(e) => setPassword(e.target.value)} \r\n//           required\r\n//         />\r\n\r\n//         <button type=\"submit\" disabled={loading} className=\"submit-btn\">\r\n//           {loading ? \"Signing up...\" : \"Sign Up\"}\r\n//         </button>\r\n\r\n//         <p className=\"login-link\">\r\n//           Already have an account? <a href=\"/login\">Login here</a>\r\n//         </p>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\nimport React, { useState } from 'react';\r\nimport { auth } from '../firebase/firebase';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signup.css'; // Add a separate CSS file for styling\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(''); // State to hold error message\r\n  const navigate = useNavigate(); // Hook for redirection\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(''); // Reset error message on new submission\r\n\r\n    try {\r\n      // Create user with email and password\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setLoading(false); // Disable the loader once signup is complete\r\n\r\n      // Redirect to the dashboard after successful signup\r\n      navigate('/dashboard'); // Redirecting to the dashboard route\r\n    } catch (error) {\r\n      console.error(\"Error during sign up:\", error.message);\r\n      setLoading(false); // Stop the loader in case of error\r\n\r\n      // Set the error message\r\n      setError(error.message); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit} className=\"signup-form\">\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input \r\n          type=\"email\" \r\n          id=\"email\" \r\n          placeholder=\"Enter your email\" \r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)} \r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input \r\n          type=\"password\" \r\n          id=\"password\" \r\n          placeholder=\"Enter your password\" \r\n          value={password} \r\n          onChange={(e) => setPassword(e.target.value)} \r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" disabled={loading} className=\"submit-btn\">\r\n          {loading ? \"Signing up...\" : \"Sign Up\"}\r\n        </button>\r\n\r\n        {/* Show error message if exists */}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <p className=\"login-link\">\r\n          Already have an account? <a href=\"/login\">Login here</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,8BAA8B,QAAQ,eAAe;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}