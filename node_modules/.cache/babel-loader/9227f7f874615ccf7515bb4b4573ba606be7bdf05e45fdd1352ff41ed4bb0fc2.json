{"ast":null,"code":"// // src/pages/Login.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { signInWithEmailAndPassword } from 'firebase/auth';\n// import { auth } from '../firebase/firebase';\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await signInWithEmailAndPassword(auth, email, password);\n//       navigate('/dashboard');\n//     } catch (error) {\n//       console.error(\"Login failed: \", error);\n//     }\n//   };\n//   return (\n//     <div className=\"form-container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\nimport React,{useState}from'react';import{auth}from'../firebase/firebase';import{signInWithEmailAndPassword}from'firebase/auth';import{useNavigate}from'react-router-dom';//import './Login.css'; // Add a separate CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');// State to hold error message\nconst navigate=useNavigate();// Hook for redirection\nconst handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');// Reset error message on new submission\ntry{// Sign in user with email and password\nawait signInWithEmailAndPassword(auth,email,password);setLoading(false);// Disable the loader once login is complete\n// Redirect to the dashboard after successful login\nnavigate('/dashboard');// Redirecting to the dashboard route\n}catch(error){console.error(\"Error during login:\",error.message);setLoading(false);// Stop the loader in case of error\n// Set the error message\nsetError(error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",placeholder:\"Enter your password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"submit-btn\",children:loading?\"Logging in...\":\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"p\",{className:\"signup-link\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/signup\",children:\"Sign up here\"})]})]})]});};export default Login;","map":{"version":3,"names":["React","useState","auth","signInWithEmailAndPassword","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","handleSubmit","e","preventDefault","console","message","className","children","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","disabled","href"],"sources":["C:/Users/SUNIL/Desktop/projectintern/travel-app/src/pages/Login.js"],"sourcesContent":["// // src/pages/Login.js\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { signInWithEmailAndPassword } from 'firebase/auth';\r\n// import { auth } from '../firebase/firebase';\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await signInWithEmailAndPassword(auth, email, password);\r\n//       navigate('/dashboard');\r\n//     } catch (error) {\r\n//       console.error(\"Login failed: \", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleLogin}>\r\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { auth } from '../firebase/firebase';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import './Login.css'; // Add a separate CSS file for styling\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(''); // State to hold error message\r\n  const navigate = useNavigate(); // Hook for redirection\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(''); // Reset error message on new submission\r\n\r\n    try {\r\n      // Sign in user with email and password\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setLoading(false); // Disable the loader once login is complete\r\n\r\n      // Redirect to the dashboard after successful login\r\n      navigate('/dashboard'); // Redirecting to the dashboard route\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error.message);\r\n      setLoading(false); // Stop the loader in case of error\r\n\r\n      // Set the error message\r\n      setError(error.message); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input \r\n          type=\"email\" \r\n          id=\"email\" \r\n          placeholder=\"Enter your email\" \r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)} \r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input \r\n          type=\"password\" \r\n          id=\"password\" \r\n          placeholder=\"Enter your password\" \r\n          value={password} \r\n          onChange={(e) => setPassword(e.target.value)} \r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" disabled={loading} className=\"submit-btn\">\r\n          {loading ? \"Logging in...\" : \"Login\"}\r\n        </button>\r\n\r\n        {/* Show error message if exists */}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <p className=\"signup-link\">\r\n          Don't have an account? <a href=\"/signup\">Sign up here</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}